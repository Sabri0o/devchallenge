[{"C:\\Users\\user\\devchallenge\\client\\src\\index.js":"1","C:\\Users\\user\\devchallenge\\client\\src\\App.js":"2","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\header.js":"3","C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js":"4","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageCard\\imagecard.js":"5","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageList\\imagelist.js":"6","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js":"7","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js":"8"},{"size":432,"mtime":1611068521713,"results":"9","hashOfConfig":"10"},{"size":3541,"mtime":1611218624557,"results":"11","hashOfConfig":"10"},{"size":1439,"mtime":1611167279174,"results":"12","hashOfConfig":"10"},{"size":111857,"mtime":1611142267927,"results":"13","hashOfConfig":"10"},{"size":817,"mtime":1611175286213,"results":"14","hashOfConfig":"10"},{"size":361,"mtime":1611160480532,"results":"15","hashOfConfig":"10"},{"size":1277,"mtime":1611221657786,"results":"16","hashOfConfig":"10"},{"size":1948,"mtime":1611222501391,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12b19ij",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\devchallenge\\client\\src\\index.js",[],["38","39"],"C:\\Users\\user\\devchallenge\\client\\src\\App.js",["40","41","42"],"import React from \"react\";\n\nimport './App.css';\n//import Header from '../src/components/navbar/header';\nimport ImageList from '../src/components/imageList/imagelist';\nimport {samples} from '../src/dummyImages/samples'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n///\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport Upload from '../src/components/navbar/upload';\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data : samples,\n//       show : false\n//     };\n//     this.showModal = this.showModal.bind(this)\n//     this.hideModal = this.hideModal.bind(this)\n//   }\n\n//   showModal = () => {\n//     console.log('clicked to show !!! ')\n//     this.setState({ show: true });\n//   };\n\n//   hideModal = () => {\n//     console.log('clicked to hide !!! ')\n\n//     this.setState({ show: false });\n//   };\n\n//   render() {\n//     return (\n//           <div className=\"App\">\n//               <Navbar >\n//                 <Form inline>\n//                 <Navbar.Brand>\n//                   <img\n//                     src=\"https://inconclusive-clock.surge.sh/static/media/my_unsplash_logo.e948d53e.svg\"\n//                     width=\"140\"\n//                     height=\"30\"/>\n//                 </Navbar.Brand>\n//                 <FormControl  type=\"text\" placeholder=\"Search\"  />\n//                <Button onClick={this.showModal} >Add a photo</Button>\n//                </Form>\n//               </Navbar>\n//       <main>\n//       <Upload show={this.state.show} handleClose={this.hideModal}>\n//           <p>Modal</p>\n//           <p>Data</p>\n//       </Upload>\n//       <ImageList imagelist={this.state.data}/>\n//       </main>\n//     </div>\n//         )\n//   }\n \n// }\n\n\n// export default App;\nimport Masonry from '../src/components/masonry/masonry';\n\n\nclass App extends React.Component{\n    constructor(props) {\n    super(props);\n    this.state = {\n      images : samples,\n      show : false,\n      brakePoints:[350, 500, 750]\n    };\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n  }\n\n  showModal = () => {\n    console.log('clicked to show !!! ')\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    console.log('clicked to hide !!! ')\n\n    this.setState({ show: false });\n  };\n\n\trender(){\n\t\treturn (\n\n\n\t\t\t<div className=\"container\">\n              <Navbar >\n                  <Form inline>\n                  <Navbar.Brand>\n                    <img\n                      src=\"https://inconclusive-clock.surge.sh/static/media/my_unsplash_logo.e948d53e.svg\"\n                      width=\"140\"\n                      height=\"30\"/>\n                  </Navbar.Brand>\n                  <FormControl  type=\"text\" placeholder=\"Search\"  />\n                 <Button onClick={this.showModal} >Add a photo</Button>\n                 </Form>\n                </Navbar>\n\t\t\t\t<div className=\"masonry-container\">\n        <Upload show={this.state.show} handleClose={this.hideModal}>\n            <p>Modal</p>\n            <p>Data</p>\n        </Upload>\n        <Masonry brakePoints={this.state.brakePoints}>\n          {this.state.images.map((image, id) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tile src={image} />\n\t\t\t\t\t\t\t) \n\t\t\t\t\t\t})}\n\t\t\t\t\t</Masonry>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Tile = ({src}) => {\n  return (\n    <div className=\"tile\">\n\t\t\t<img src={src} />\n\t\t</div>\n  );\n};\n\nexport default App;\n","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\header.js",[],["43","44"],"C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\imageCard\\imagecard.js",["45","46","47"],"import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {spans:0};\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n    const spans = Math.ceil(height / 10 );\r\n    this.setState({ spans: spans});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} src={this.props.image}  alt='blabla' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageList\\imagelist.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js",["48","49"],"C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js",["50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":104,"column":21,"nodeType":"63","endLine":107,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":134,"column":4,"nodeType":"63","endLine":134,"endColumn":21},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"67","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"68","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"69","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":12},{"ruleId":"57","severity":1,"message":"70","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":11},{"ruleId":"57","severity":1,"message":"71","line":3,"column":28,"nodeType":"59","messageId":"60","endLine":3,"endColumn":40},{"ruleId":"57","severity":1,"message":"72","line":3,"column":42,"nodeType":"59","messageId":"60","endLine":3,"endColumn":48},{"ruleId":"57","severity":1,"message":"73","line":3,"column":50,"nodeType":"59","messageId":"60","endLine":3,"endColumn":56},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'ImageList' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"'Card' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","no-global-assign","no-unsafe-negation"]
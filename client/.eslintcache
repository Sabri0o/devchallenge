[{"C:\\Users\\user\\devchallenge\\client\\src\\index.js":"1","C:\\Users\\user\\devchallenge\\client\\src\\App.js":"2","C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js":"3","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js":"4","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js":"5"},{"size":432,"mtime":1611068521713,"results":"6","hashOfConfig":"7"},{"size":3046,"mtime":1611356169567,"results":"8","hashOfConfig":"7"},{"size":111857,"mtime":1611269953982,"results":"9","hashOfConfig":"7"},{"size":3397,"mtime":1611392249549,"results":"10","hashOfConfig":"7"},{"size":4441,"mtime":1611400644973,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12b19ij",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\devchallenge\\client\\src\\index.js",[],["24","25"],"C:\\Users\\user\\devchallenge\\client\\src\\App.js",["26","27"],"import React from \"react\";\n\nimport './App.css';\nimport {samples} from '../src/dummyImages/samples'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n///\n\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport Upload from '../src/components/navbar/upload';\n\n\nimport Masonry from '../src/components/masonry/masonry';\nimport $ from 'jquery'\nimport '../src/components/masonry/masonry.css';\n\n\nclass App extends React.Component{\n    constructor(props) {\n    super(props);\n    this.state = {\n      images : samples,\n      copy : [],\n      show : false,\n      brakePoints:[350, 500],\n      toUpload : 'nothing yet',\n      file:''\n    };\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.getData = this.getData.bind(this)\n    this.search = this.search.bind(this)\n  }\n\n  componentDidMount() {\n    //console.log('triggered')\n    $.post(\"http://localhost:8080/get_images\",\n    {},\n    (res) => {\n      //console.log('images from database',res)\n      this.setState({\n        images : res,\n        copy : res\n        })\n      }\n    )\n  }\n\n  showModal = () => {\n    //console.log('clicked to show !!! ')\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    //console.log('clicked to hide !!! ')\n\n    this.setState({ show: false });\n  };\n\n  getData = (val) =>{\n    // samples.unshift(val.imageUrl);\n    this.componentDidMount()\n  }\n\n  search = (event)=>{\n    //console.log('query: ',event.target.value)\n    //console.log(this.state.images.filter(x=>x.label.includes(event.target.value)))\n    this.setState({\n      images : this.state.copy.filter(x=>x.label.includes(event.target.value))\n    })\n    \n  }\n\n\trender(){\n\t\treturn (\n\n\t\t\t<div className=\"container\">\n           \n                  <Form inline>\n                  <Form.Group >\n                  <br />\n                    <img\n                      src=\"https://inconclusive-clock.surge.sh/static/media/my_unsplash_logo.e948d53e.svg\"\n                      width=\"140\"\n                      height=\"30\"/>\n                   <br />\n                  <FormControl  onChange={this.search}  type=\"text\" placeholder=\"Search\"  />\n                  <br />\n                 <Button variant=\"success\" onClick={this.showModal} >Add a photo</Button>\n                 </Form.Group>\n                  </Form>\n       \n\t\t\t\t<div className=\"masonry-container\">\n        <Upload show={this.state.show} \n                handleClose={this.hideModal} \n                sendData={this.getData}>\n            <p>Modal</p>\n            <p>Data</p>\n        </Upload>\n        <Masonry brakePoints={this.state.brakePoints} sendData={this.getData} className='image-container'>\n          {this.state.images.map((image, id) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tile key={id} src={image} />\n\t\t\t\t\t\t\t) \n\t\t\t\t\t\t})}\n\t\t\t\t\t</Masonry>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Tile = ({src}) => {\n  return (\n    <div className=\"tile\">\n\t\t\t<img src={src.imageUrl} />\n\t\t</div>\n  );\n};\n\nexport default App;\n","C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":84,"column":21,"nodeType":"34","endLine":87,"endColumn":36},{"ruleId":"32","severity":1,"message":"33","line":118,"column":4,"nodeType":"34","endLine":118,"endColumn":30},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
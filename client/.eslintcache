[{"C:\\Users\\user\\devchallenge\\client\\src\\index.js":"1","C:\\Users\\user\\devchallenge\\client\\src\\App.js":"2","C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js":"3","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js":"4","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js":"5"},{"size":432,"mtime":1611068521713,"results":"6","hashOfConfig":"7"},{"size":2985,"mtime":1611337213811,"results":"8","hashOfConfig":"7"},{"size":111857,"mtime":1611269953982,"results":"9","hashOfConfig":"7"},{"size":7119,"mtime":1611268171648,"results":"10","hashOfConfig":"7"},{"size":2399,"mtime":1611334705875,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12b19ij",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\devchallenge\\client\\src\\index.js",[],["24","25"],"C:\\Users\\user\\devchallenge\\client\\src\\App.js",["26","27"],"C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js",["28","29"],"import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\nimport $ from 'jquery'\r\n\r\n\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      label: '',\r\n      toUpload : 'nothing yet',\r\n      file:''\r\n    };\r\n\r\n    this.uploadImage = this.uploadImage.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    /////\r\n    this.selectFile = this.selectFile.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init()\r\n  }\r\n\r\n  //////\r\n\r\n  selectFile = (event) => {    // add event to parameter\r\n    let thisFile = event.target.files\r\n    if (thisFile){\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(thisFile[0])\r\n      // this.state.file = event.target.files[0].name\r\n      \r\n      reader.onload = (event) => {\r\n        this.setState({\r\n          toUpload : event.target.result,\r\n          file :thisFile[0].name\r\n        })\r\n        //this.state.toUpload = event.target.result \r\n        //console.log(\"image to upload\",event.target.result )\r\n        //this.state.file = thisFile[0].name\r\n        //console.log( this.state.file)\r\n      }\r\n    }\r\n    \r\n    if (this.customFileInit) {\r\n      bsCustomFileInput.destroy();\r\n    }\r\n    bsCustomFileInput.init();\r\n    this.customFileInit = true;\r\n  }\r\n\r\n///////\r\n\r\n  onChange (event) {\r\n    //console.log(event.target.value)\r\n    this.setState({\r\n      label:event.target.value\r\n    })\r\n  }\r\n\r\n  uploadImage () {\r\n    //console.log('image string: ',this.state.toUpload)\r\n    //console.log('file name: ',this.state.label)\r\n\r\n    $.post(\"http://localhost:8080/upload_image\",\r\n      {\r\n        \"image\": this.state.toUpload,\r\n        \"label\": this.state.label,\r\n      },\r\n    (res) => {\r\n       console.log('server response')\r\n       this.props.sendData(res)\r\n       alert('done')\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show} onHide={this.props.handleClose} onChange = {this.selectFile}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered>\r\n\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add photo\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n          <Form.Label>Image Label</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"label\" onChange={this.onChange}/>\r\n \r\n\r\n\r\n          <Form>\r\n           <Form.File \r\n              id=\"custom-file\"\r\n              label=\"Custom file input\"\r\n              custom\r\n            />\r\n          </Form>\r\n    \r\n    \r\n           </Modal.Body>\r\n           <Modal.Footer>\r\n             <Button onClick={this.props.handleClose}>Cancel</Button>\r\n             <Button onClick={this.uploadImage}>Upload</Button>\r\n           </Modal.Footer>\r\n         </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n export default Upload;\r\n\r\n\r\n // bsCustomFileInput.init()\r\n\r\n// var btn = document.getElementById('btnResetForm')\r\n// var form = document.querySelector('form')\r\n// if(btn) {\r\n//   btn.addEventListener('click', function () {\r\n//   form.reset()\r\n// })\r\n// }\r\n\r\n// const Upload = (props) => {\r\n\r\n// return (\r\n//     <Modal\r\n//     show={props.show} onHide={props.handleClose} onChange = {props.uploadImage}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//           Add photo\r\n//         </Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n\r\n\r\n//       <div className=\"input-group\">\r\n//         <div className=\"input-group-prepend\">\r\n  \r\n//         </div>\r\n//         <div className=\"custom-file\">\r\n//         <Form.Group as={Row}>\r\n//         <Form.File\r\n//           type=\"file\"\r\n//           className=\"custom-file-label\"\r\n//           id=\"inputGroupFile01\"\r\n//           label=\"Upload Boundary File\"\r\n//           custom\r\n//         />\r\n//       </Form.Group>\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button onClick={props.handleClose}>Cancel</Button>\r\n//         <Button >Upload</Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\n//   export default Upload;\r\n\r\n// const Upload = (props) => {\r\n//   useEffect(() => {\r\n//     bsCustomFileInput.init();\r\n//   }, []);\r\n\r\n//   return (\r\n//       <Modal\r\n//       show={props.show} onHide={props.handleClose} onChange = {props.uploadImage}\r\n//         size=\"lg\"\r\n//         aria-labelledby=\"contained-modal-title-vcenter\"\r\n//         centered\r\n//       >\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//             Add photo\r\n//           </Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n  \r\n  \r\n//         <div className=\"input-group\">\r\n//           <div className=\"input-group-prepend\">\r\n    \r\n//           </div>\r\n//           <div className=\"custom-file\">\r\n//           <>\r\n//       <Form.Group as={Row}>\r\n//         <Form.File\r\n//           type=\"file\"\r\n//           className=\"custom-file-label\"\r\n//           id=\"inputGroupFile01\"\r\n//           label=\"Upload Boundary File\"\r\n//           custom\r\n//         />\r\n//       </Form.Group>\r\n//     </>\r\n//           </div>\r\n//         </div>\r\n  \r\n  \r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button onClick={props.handleClose}>Cancel</Button>\r\n//           <Button >Upload</Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     );\r\n//   }\r\n  \r\n//     export default Upload;\r\n\r\n\r\n// class Upload extends React.Component{\r\n//   constructor(props) {\r\n//   super(props);\r\n//   this.state = {\r\n//     bla:'bla'\r\n//   };\r\n\r\n// }\r\n\r\n// componentDidMount() {\r\n//   bsCustomFileInput.init()\r\n// }\r\n\r\n\r\n// render(){\r\n//   return (\r\n//         <Modal\r\n//         show={this.props.show} onHide={this.props.handleClose} onChange = {this.props.uploadImage}\r\n//           size=\"lg\"\r\n//           aria-labelledby=\"contained-modal-title-vcenter\"\r\n//           centered\r\n//         >\r\n//           <Modal.Header closeButton>\r\n//             <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//               Add photo\r\n//             </Modal.Title>\r\n//           </Modal.Header>\r\n//           <Modal.Body>\r\n    \r\n    \r\n//           <div class=\"container\">\r\n//         <div class=\"custom-file\">\r\n//           <input id=\"inputGroupFile01\" type=\"file\" class=\"custom-file-input\" />\r\n//           <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n//         </div>\r\n//       </div>\r\n    \r\n    \r\n//           </Modal.Body>\r\n//           <Modal.Footer>\r\n//             <Button onClick={this.props.handleClose}>Cancel</Button>\r\n//             <Button >Upload</Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//     export default Upload;","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":82,"column":21,"nodeType":"36","endLine":85,"endColumn":36},{"ruleId":"34","severity":1,"message":"35","line":115,"column":4,"nodeType":"36","endLine":115,"endColumn":30},{"ruleId":"37","severity":1,"message":"38","line":3,"column":17,"nodeType":"39","messageId":"40","endLine":3,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":11},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]
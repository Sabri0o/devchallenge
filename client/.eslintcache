[{"C:\\Users\\user\\devchallenge\\client\\src\\index.js":"1","C:\\Users\\user\\devchallenge\\client\\src\\App.js":"2","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\header.js":"3","C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js":"4","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageCard\\imagecard.js":"5","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageList\\imagelist.js":"6","C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js":"7","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js":"8"},{"size":432,"mtime":1611068521713,"results":"9","hashOfConfig":"10"},{"size":3150,"mtime":1611318639369,"results":"11","hashOfConfig":"10"},{"size":1439,"mtime":1611167279174,"results":"12","hashOfConfig":"10"},{"size":111857,"mtime":1611269953982,"results":"13","hashOfConfig":"10"},{"size":817,"mtime":1611175286213,"results":"14","hashOfConfig":"10"},{"size":361,"mtime":1611160480532,"results":"15","hashOfConfig":"10"},{"size":7119,"mtime":1611268171648,"results":"16","hashOfConfig":"10"},{"size":2409,"mtime":1611318712683,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12b19ij",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\devchallenge\\client\\src\\index.js",[],["38","39"],"C:\\Users\\user\\devchallenge\\client\\src\\App.js",["40","41","42","43"],"C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\header.js",[],["44","45"],"C:\\Users\\user\\devchallenge\\client\\src\\dummyImages\\samples.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\imageCard\\imagecard.js",["46","47","48"],"import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {spans:0};\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n    const spans = Math.ceil(height / 10 );\r\n    this.setState({ spans: spans});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} src={this.props.image}  alt='blabla' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","C:\\Users\\user\\devchallenge\\client\\src\\components\\imageList\\imagelist.js",[],"C:\\Users\\user\\devchallenge\\client\\src\\components\\navbar\\upload.js",["49","50"],"import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\nimport $ from 'jquery'\r\n\r\n\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      label: '',\r\n      toUpload : 'nothing yet',\r\n      file:''\r\n    };\r\n\r\n    this.uploadImage = this.uploadImage.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    /////\r\n    this.selectFile = this.selectFile.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init()\r\n  }\r\n\r\n  //////\r\n\r\n  selectFile = (event) => {    // add event to parameter\r\n    let thisFile = event.target.files\r\n    if (thisFile){\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(thisFile[0])\r\n      // this.state.file = event.target.files[0].name\r\n      \r\n      reader.onload = (event) => {\r\n        this.setState({\r\n          toUpload : event.target.result,\r\n          file :thisFile[0].name\r\n        })\r\n        //this.state.toUpload = event.target.result \r\n        //console.log(\"image to upload\",event.target.result )\r\n        //this.state.file = thisFile[0].name\r\n        //console.log( this.state.file)\r\n      }\r\n    }\r\n    \r\n    if (this.customFileInit) {\r\n      bsCustomFileInput.destroy();\r\n    }\r\n    bsCustomFileInput.init();\r\n    this.customFileInit = true;\r\n  }\r\n\r\n///////\r\n\r\n  onChange (event) {\r\n    //console.log(event.target.value)\r\n    this.setState({\r\n      label:event.target.value\r\n    })\r\n  }\r\n\r\n  uploadImage () {\r\n    //console.log('image string: ',this.state.toUpload)\r\n    //console.log('file name: ',this.state.label)\r\n\r\n    $.post(\"http://localhost:8080/upload_image\",\r\n      {\r\n        \"image\": this.state.toUpload,\r\n        \"label\": this.state.label,\r\n      },\r\n    (res) => {\r\n       console.log('server response')\r\n       this.props.sendData(res)\r\n       alert('done')\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show} onHide={this.props.handleClose} onChange = {this.selectFile}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered>\r\n\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add photo\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n          <Form.Label>Image Label</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"label\" onChange={this.onChange}/>\r\n \r\n\r\n\r\n          <Form>\r\n           <Form.File \r\n              id=\"custom-file\"\r\n              label=\"Custom file input\"\r\n              custom\r\n            />\r\n          </Form>\r\n    \r\n    \r\n           </Modal.Body>\r\n           <Modal.Footer>\r\n             <Button onClick={this.props.handleClose}>Cancel</Button>\r\n             <Button onClick={this.uploadImage}>Upload</Button>\r\n           </Modal.Footer>\r\n         </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n export default Upload;\r\n\r\n\r\n // bsCustomFileInput.init()\r\n\r\n// var btn = document.getElementById('btnResetForm')\r\n// var form = document.querySelector('form')\r\n// if(btn) {\r\n//   btn.addEventListener('click', function () {\r\n//   form.reset()\r\n// })\r\n// }\r\n\r\n// const Upload = (props) => {\r\n\r\n// return (\r\n//     <Modal\r\n//     show={props.show} onHide={props.handleClose} onChange = {props.uploadImage}\r\n//       size=\"lg\"\r\n//       aria-labelledby=\"contained-modal-title-vcenter\"\r\n//       centered\r\n//     >\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//           Add photo\r\n//         </Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n\r\n\r\n//       <div className=\"input-group\">\r\n//         <div className=\"input-group-prepend\">\r\n  \r\n//         </div>\r\n//         <div className=\"custom-file\">\r\n//         <Form.Group as={Row}>\r\n//         <Form.File\r\n//           type=\"file\"\r\n//           className=\"custom-file-label\"\r\n//           id=\"inputGroupFile01\"\r\n//           label=\"Upload Boundary File\"\r\n//           custom\r\n//         />\r\n//       </Form.Group>\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button onClick={props.handleClose}>Cancel</Button>\r\n//         <Button >Upload</Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\n//   export default Upload;\r\n\r\n// const Upload = (props) => {\r\n//   useEffect(() => {\r\n//     bsCustomFileInput.init();\r\n//   }, []);\r\n\r\n//   return (\r\n//       <Modal\r\n//       show={props.show} onHide={props.handleClose} onChange = {props.uploadImage}\r\n//         size=\"lg\"\r\n//         aria-labelledby=\"contained-modal-title-vcenter\"\r\n//         centered\r\n//       >\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//             Add photo\r\n//           </Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n  \r\n  \r\n//         <div className=\"input-group\">\r\n//           <div className=\"input-group-prepend\">\r\n    \r\n//           </div>\r\n//           <div className=\"custom-file\">\r\n//           <>\r\n//       <Form.Group as={Row}>\r\n//         <Form.File\r\n//           type=\"file\"\r\n//           className=\"custom-file-label\"\r\n//           id=\"inputGroupFile01\"\r\n//           label=\"Upload Boundary File\"\r\n//           custom\r\n//         />\r\n//       </Form.Group>\r\n//     </>\r\n//           </div>\r\n//         </div>\r\n  \r\n  \r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button onClick={props.handleClose}>Cancel</Button>\r\n//           <Button >Upload</Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     );\r\n//   }\r\n  \r\n//     export default Upload;\r\n\r\n\r\n// class Upload extends React.Component{\r\n//   constructor(props) {\r\n//   super(props);\r\n//   this.state = {\r\n//     bla:'bla'\r\n//   };\r\n\r\n// }\r\n\r\n// componentDidMount() {\r\n//   bsCustomFileInput.init()\r\n// }\r\n\r\n\r\n// render(){\r\n//   return (\r\n//         <Modal\r\n//         show={this.props.show} onHide={this.props.handleClose} onChange = {this.props.uploadImage}\r\n//           size=\"lg\"\r\n//           aria-labelledby=\"contained-modal-title-vcenter\"\r\n//           centered\r\n//         >\r\n//           <Modal.Header closeButton>\r\n//             <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//               Add photo\r\n//             </Modal.Title>\r\n//           </Modal.Header>\r\n//           <Modal.Body>\r\n    \r\n    \r\n//           <div class=\"container\">\r\n//         <div class=\"custom-file\">\r\n//           <input id=\"inputGroupFile01\" type=\"file\" class=\"custom-file-input\" />\r\n//           <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n//         </div>\r\n//       </div>\r\n    \r\n    \r\n//           </Modal.Body>\r\n//           <Modal.Footer>\r\n//             <Button onClick={this.props.handleClose}>Cancel</Button>\r\n//             <Button >Upload</Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//     export default Upload;","C:\\Users\\user\\devchallenge\\client\\src\\components\\masonry\\masonry.js",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":19,"column":8,"nodeType":"60","messageId":"61","endLine":19,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":85,"column":21,"nodeType":"65","endLine":88,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":118,"column":4,"nodeType":"65","endLine":118,"endColumn":30},{"ruleId":"54","replacedBy":"66"},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"69","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"70","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"71","line":3,"column":17,"nodeType":"60","messageId":"61","endLine":3,"endColumn":26},{"ruleId":"58","severity":1,"message":"72","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":11},{"ruleId":"58","severity":1,"message":"73","line":3,"column":28,"nodeType":"60","messageId":"61","endLine":3,"endColumn":40},{"ruleId":"58","severity":1,"message":"74","line":3,"column":42,"nodeType":"60","messageId":"61","endLine":3,"endColumn":48},{"ruleId":"58","severity":1,"message":"75","line":3,"column":50,"nodeType":"60","messageId":"61","endLine":3,"endColumn":56},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'ImageList' is defined but never used.","Identifier","unusedVar","'bsCustomFileInput' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["76"],["77"],"'Card' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","no-global-assign","no-unsafe-negation"]